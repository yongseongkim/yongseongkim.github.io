"use strict";(self.webpackChunkblog_yongseongkim=self.webpackChunkblog_yongseongkim||[]).push([[456],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,d=p["".concat(s,".").concat(m)]||p[m]||f[m]||i;return t?a.createElement(d,l(l({ref:n},u),{},{components:t})):a.createElement(d,l({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1671:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const i={title:"Memory Management in Swift",tags:["swift"]},l=void 0,o={permalink:"/blog/2020/06/14/swift-memory-management",source:"@site/blog/2020-06-14-swift-memory-management/index.md",title:"Memory Management in Swift",description:"\uc601\uc5b4 \uc77d\ub294 \uc2b5\uad00\uc744 \uae30\ub974\uace0 \uae30\uc220\uc801\uc778 \ub0b4\uc6a9\uc744 \ub9ce\uc774 \uc811\ud558\uae30 \uc704\ud574 Medium \uae00\ub4e4\uc744 \ub9ce\uc774 \uc77d\uc73c\ub824\uace0 \ub178\ub825\ud569\ub2c8\ub2e4.",date:"2020-06-14T00:00:00.000Z",formattedDate:"June 14, 2020",tags:[{label:"swift",permalink:"/blog/tags/swift"}],readingTime:19.44,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Memory Management in Swift",tags:["swift"]},prevItem:{title:"How To Open An App By URL",permalink:"/blog/2021/06/25/how-to-open-app-by-url"},nextItem:{title:"SwiftUI - Data Flow Patterns",permalink:"/blog/2020/05/26/swiftui-data-flow-patterns"}},s={authorsImageUrls:[]},c=[{value:"How Reference Counting Works",id:"how-reference-counting-works",level:2},{value:"Strong, Weak, Unowned",id:"strong-weak-unowned",level:2},{value:"Struct vs. Class",id:"struct-vs-class",level:2},{value:"Parameters in Function",id:"parameters-in-function",level:2},{value:"Capturing Values in Closure",id:"capturing-values-in-closure",level:2},{value:"Escaping vs. Non-escaping",id:"escaping-vs-non-escaping",level:3},{value:"Capture list",id:"capture-list",level:3},{value:"Usages of weak self in Closure",id:"usages-of-weak-self-in-closure",level:3}],u={toc:c},p="wrapper";function f(e){let{components:n,...i}=e;return(0,r.kt)(p,(0,a.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\uc601\uc5b4 \uc77d\ub294 \uc2b5\uad00\uc744 \uae30\ub974\uace0 \uae30\uc220\uc801\uc778 \ub0b4\uc6a9\uc744 \ub9ce\uc774 \uc811\ud558\uae30 \uc704\ud574 ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/"},"Medium")," \uae00\ub4e4\uc744 \ub9ce\uc774 \uc77d\uc73c\ub824\uace0 \ub178\ub825\ud569\ub2c8\ub2e4.\n\ub9ce\uc740 \uae00\ub4e4\uc744 \uc811\ud558\ub358 \uc911 ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/swlh/can-you-answer-this-simple-swift-question-correctly-3d2836cff7b1"},"Can You Answer This Simple Swift Question Correctly?")," \uae00\uc744 \uc77d\uc5c8\ub294\ub370\nClosure \uc548\uc5d0\uc11c \ubcc0\uc218 \uc811\uadfc\uc5d0 \ub300\ud55c \uc9c8\ubb38\uc5d0 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc774 \uc81c\ub300\ub85c \ub2f5\uc744 \ud558\uc9c0 \ubabb\ud588\ub2e4 \ub77c\uace0 \ud569\ub2c8\ub2e4.\n\ud3c9\uc18c\uc5d0 \uc911\uc694\ud558\uac8c \uc0dd\uac01\ud588\ub358 \ubd80\ubd84\uc774\uc5c8\uace0 \uba74\uc811 \uc900\ube44\ub97c \uc704\ud574 \uc815\ub9ac\ud558\uae30\ub85c \ud588\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h1",{id:"questions"},"Questions"),(0,r.kt)("p",null,"\uc544\ub798 \uc9c8\ubb38\ub4e4\uc5d0 \ub2f5\ubcc0\uc744 \ud560 \uc218 \uc788\ub2e4\uba74 \ub0b4\uc6a9\uc740 \uc77d\uc744 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4 :)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// Question 1\nvar variable = "Value before defining closure"\nlet closure = {\n    print(variable)\n}\nvariable = "Value after defining closure"\nclosure() // ?\n// Question 2\nvar variable = "Value before defining closure"\nlet closure = { [variable] in\n    print(variable)\n}\nvariable = "Value after defining closure"\nclosure() // ?\n// Question 3\nclass Object {\n    var name: String\n\n    init(name: String) {\n        self.name = name\n    }\n}\nvar obj = Object(name: "Value before defining closure")\nlet closure = { [obj] in\n    print(obj.name)\n}\nobj.name = "Value after defining closure"\nclosure() // ?\n// Question 4\nfunc makeIncrementer(forIncrement amount: Int) -> () -> Int {\n    var runningTotal = 0\n    func incrementer() -> Int {\n        runningTotal += amount\n        return runningTotal\n    }\n    return incrementer\n}\n\nlet incrementByTen = makeIncrementer(forIncrement: 10)\nincrementByTen() // returns ?\nincrementByTen() // returns ?\nincrementByTen() // returns ?\nlet incrementBySeven = makeIncrementer(forIncrement: 7)\nincrementBySeven() // returns ?\nincrementByTen() // returns ?\n')),(0,r.kt)("p",null,"ARC \ub294 Automatic Reference Counting \uc758 \uc57d\uc790\ub85c \uc790\ub3d9\uc73c\ub85c Reference Count \ub97c \uc790\ub3d9\uc73c\ub85c \uad00\ub9ac\ud574\uc8fc\ub294 \ubc29\uc2dd\uc785\ub2c8\ub2e4.\nReference Counting \ubc29\uc2dd\uc740 Reference \uc758 \uac2f\uc218\ub97c \ubcf4\uace0 \ud574\ub2f9 \uac1d\uccb4\uac00 \ud544\uc694\ud55c\uc9c0 \uc5ec\ubd80\ub97c \ud310\ub2e8\ud569\ub2c8\ub2e4.\nReference \uc758 \uac2f\uc218\uac00 0 \uc774\uba74 \ud574\ub2f9 \uac1d\uccb4\ub294 \ud544\uc694\uc5c6\ub2e4\uace0 \ud310\ub2e8\ud558\uc5ec \uba54\ubaa8\ub9ac \ud574\uc81c\uc2dc\ud0a4\ub294 \ubc29\uc2dd\uc785\ub2c8\ub2e4.\nJVM \uc5d0\uc11c \uc791\ub3d9\ud558\ub294 Garbage Collection \uc740 \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 \uc911\uc5d0 \ub354 \uc774\uc0c1 \ud544\uc694 \uc5c6\ub294 \uac1d\uccb4\ub4e4\uc744 \uc8fc\uae30\uc801\uc73c\ub85c \ucc3e\uc544 \uba54\ubaa8\ub9ac \ud574\uc81c\uc2dc\ucf1c \ubc84\ub9bd\ub2c8\ub2e4.\n\uc774\uc640 \ub2e4\ub974\uac8c ARC \ub294 \ucef4\ud30c\uc77c \uc2dc\uc810\uc5d0 \uad6c\ubb38\uc744 \ubd84\uc11d\ud558\uc5ec \uc801\uc808\ud558\uac8c Reference Counting \ucf54\ub4dc\ub97c \uc0bd\uc785\ud558\uc5ec \uba54\ubaa8\ub9ac \ud560\ub2f9, \ud574\uc81c\ub97c \ud569\ub2c8\ub2e4.\n\uc6d0\ub798 iOS 4 \uc804\uc5d0\ub294 Objective-C \ucf54\ub4dc\ub85c ",(0,r.kt)("inlineCode",{parentName:"p"},"alloc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"new"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"retain")," ",(0,r.kt)("inlineCode",{parentName:"p"},"release")," \ub4f1 \uc9c1\uc811 \ucf54\ub4dc\ub85c \uc791\uc131\ud558\uc5ec \uba54\ubaa8\ub9ac \ud560\ub2f9, \ud574\uc81c \ud588\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"how-reference-counting-works"},"How Reference Counting Works"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class Point {\n    var x, y: Double\n}\nlet point1 = Point(x: 0, y: 0)\nlet point2 = point1\npoint2.x = 5\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"How Reference Counting Works",src:t(2747).Z,width:"1376",height:"590"})),(0,r.kt)("p",null,"\ucd9c\ucc98: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2016/416/"},"WWDC 2016 Understanding Swift Performance")),(0,r.kt)("p",null,"\uc704 \uadf8\ub9bc\uc5d0\uc11c\uc640 \uac19\uc774 point2 \ubcc0\uc218\uac00 \uac19\uc740 \uac1d\uccb4\ub97c \uac00\ub9ac\ud0a4\uba74\uc11c reference count \ub294 2 \uac00 \ub429\ub2c8\ub2e4.\n\ubaa8\ub4e0 \ub3d9\uc791\uc774 \ub05d\ub098\uace0 Reference \uac00 \uc5c6\uc5b4\uc9c0\uba74\uc11c Point \uac1d\uccb4\ub294 \uba54\ubaa8\ub9ac\uc5d0\uc11c \ud574\uc81c\ub429\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"strong-weak-unowned"},"Strong, Weak, Unowned"),(0,r.kt)("p",null,"\uac1d\uccb4\uc5d0 \ub300\ud55c \ubaa8\ub4e0 Reference \uac00 Reference Counting \uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4.\nWeak, Unowned \ub294 \uac1d\uccb4\uc758 Reference Count \ub97c \uc99d\uac00\uc2dc\ud0a4\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uba54\ubaa8\ub9ac\uc5d0\uc11c \ud574\uc81c\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"Strong Reference \ub294 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \ud2b9\uc131\uc73c\ub85c \uc778\ud574 \uc798\ubabb \uc0ac\uc6a9\ud558\uba74 Memory leak \uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud544\uc694 \uc5c6\uc5b4\uc9c4 \uac1d\uccb4\uac00 Reference Count \uac00 0 \uc774 \ub418\uc9c0 \uc54a\uc544 \uba54\ubaa8\ub9ac\ub97c \ucc28\uc9c0\ud558\uac8c \ub418\ub294 \uc0c1\ud669\uc774\uc8e0.\n\uc2dc\uac04\uc774 \uc9c0\ub098 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218\ub85d \uba54\ubaa8\ub9ac\uac00 \uc99d\uac00\ud558\uba74\uc11c \uc774\uc0c1\ud558\uac8c \ub3d9\uc791\ud560 \uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class ObjectA {\n    var b: ObjectB?\n}\nclass ObjectB {\n    var c: ObjectC?\n}\nclass ObjectC {\n    var b: ObjectB?\n}\nlet objA = ObjectA()\nlet objB = ObjectB()\nlet objC = ObjectC()\nobjA.b = objB\nobjB.c = objC\nobjC.b = objB\n// ...\nobjA.b = nil // ObjectB \uc5d0 \ub300\ud55c \ucc38\uc870\uac00 \ub04a\uc5b4\uc838\ub3c4 Reference Cycle \ub85c \uc778\ud574 \uba54\ubaa8\ub9ac \ud574\uc81c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n")),(0,r.kt)("p",null,"\uc704 \ucf54\ub4dc\uc758 \uacbd\uc6b0 ObjectA \uac00 ObjectB \uc5d0 \ub300\ud55c reference \ub97c \uc5c6\uc560\ub3c4 ObjectB, ObjectC \uc11c\ub85c \uac00\ub9ac\ud0a4\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc774\ub7ec\ud55c \uac1d\uccb4\ub4e4\uc774 \uc5c4\uccad\ub09c \uba54\ubaa8\ub9ac\ub97c \uc7a1\uc544\uba39\uc73c\uba74\uc11c \uc11c\ube44\uc2a4\uac00 \uba39\ud1b5\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"Weak, Unowned Reference \ub294 Strong Reference \uc640 \ub2ec\ub9ac Reference Count \ub97c \uc99d\uac00\uc2dc\ud0a4\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\nWeak Reference \ub294 \ud574\ub2f9 \uac1d\uccb4\ub97c Optional \ud558\uac8c \ucc38\uc870\ud569\ub2c8\ub2e4. \ubc18\uba74\uc5d0 Unowned Reference \ub294 \ud574\ub2f9 \uac1d\uccb4\uac00 \uc808\ub300 nil \uc774 \ub420 \uc218 \uc5c6\ub2e4\ub294 \uac00\uc815\uc758 reference \uc785\ub2c8\ub2e4.\nUnowned Reference \ub85c \ucc38\uc870\ud55c \uac1d\uccb4\uac00 \uba54\ubaa8\ub9ac \ud574\uc81c\ub410\uc74c\uc5d0\ub3c4 \uc811\uadfc\uc744 \uc2dc\ub3c4\ud558\uba74 \uc5d0\ub7ec\uac00 \ub0a9\ub2c8\ub2e4.\nWeak Reference \ub294 \ucc38\uc870\ud558\uace0 \uc788\ub294 \uac1d\uccb4\uac00 \uba54\ubaa8\ub9ac \ud574\uc81c\ub41c \uacbd\uc6b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"?")," \ub85c \uc811\uadfc\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5d0\ub7ec\uac00 \ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\uc704 \uc608\uc81c\uc5d0\uc11c ObjectB \uc640 ObjectC \uc0ac\uc774\uc5d0 Weak, Unowned Reference \ub97c \uc0ac\uc6a9\ud558\uc5ec Reference Cycle \uc744 \uc5c6\uc568 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h1",{id:"reference-type-vs-value-type"},"Reference Type vs. Value Type"),(0,r.kt)("p",null,"ARC \ub294 \ubcf4\ud1b5 Reference Type \uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4.\nSwift \uc5d0\uc11c\ub294 \ub9ce\uc740 \ub370\uc774\ud130\ub4e4\uc774 Reference Type \uc678\uc5d0\ub3c4 Value Type \uc73c\ub85c\ub3c4 \uc874\uc7ac\ud569\ub2c8\ub2e4.\nValue Type \uacfc Reference Type \uc5d0 \ub300\ud574\uc11c \uc815\ub9ac\ud574\ubd24\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"Stack \uc5d0\ub294 Int, Double, enum, array, set, dictionary \ub4f1\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4.\n\ud568\uc218\uac00 \ubd88\ub838\uc744 \ub54c, \ud568\uc218 \ub0b4 \uc9c0\uc5ed \ubcc0\uc218\uc640 \ub9e4\uac1c \ubcc0\uc218\ub4e4\ub3c4 Stack \uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4.\nCPU \uac00 \uba54\ubaa8\ub9ac\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uad6c\uc131\ud558\uace0 pointer \uc704\uce58\ub9cc \ubcc0\ud654\uc2dc\ud0a4\uae30 \ub54c\ubb38\uc5d0 \uc77d\uace0 \uc4f0\ub294 \uc18d\ub3c4\uac00 \uad49\uc7a5\ud788 \ube60\ub985\ub2c8\ub2e4.\nHeap \uc5d0\ub294 Class, Protocol \uc744 \uad6c\ud604\ud55c Struct, Closure \ub4f1\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4.\nHeap \uc740 \uba54\ubaa8\ub9ac\ub97c \uad00\ub9ac\ud558\ub294 \ub370 thread safety overhead \uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4.\nReference Counting \uc774 atomic \ud558\uac8c \ub3d9\uc791\ud558\uae30 \ub54c\ubb38\uc5d0 Stack \ubcf4\ub2e4 \uc0c1\ub300\uc801\uc73c\ub85c \ub290\ub9bd\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"struct-vs-class"},"Struct vs. Class"),(0,r.kt)("p",null,"\ubcf4\ud1b5 \ub370\uc774\ud130\ub97c \ubaa8\uc544\uc11c \ub2e4\ub8e8\ub294 \uacbd\uc6b0 struct \uc640 class \uc0ac\uc774\ub97c \uace0\ubbfc\ud569\ub2c8\ub2e4.\nstruct \ub294 Stack \uc5d0 \ub370\uc774\ud130\uac00 \uc800\uc7a5\ub418\uba70 \ub2e4\ub978 \ubcc0\uc218\uc5d0 \ud560\ub2f9\ud558\uac8c \ub418\uba74 \ub370\uc774\ud130\ub97c \ubcf5\uc0ac\ud569\ub2c8\ub2e4.\n\uac19\uc740 \uac1d\uccb4\ub97c \uc4f0\ub294 \uac83\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud574\ub3c4 \ub2e4\ub978 \uac1d\uccb4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\uac12\uc5d0 \uc758\ud574 \uac1d\uccb4\ub97c \uad6c\ubd84\ud558\uae30 \ub54c\ubb38\uc5d0 Equatable \uc744 \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4.\n",(0,r.kt)("img",{alt:"Struct vs. Class Array of Struct",src:t(5192).Z,width:"3024",height:"1432"})),(0,r.kt)("p",null,"\ucd9c\ucc98: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2015/409/"},"WWDC 2015 Optimizing Swift Performance"),"\nclass \uac1d\uccb4\ub294 heap \uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud569\ub2c8\ub2e4. \ub2e4\ub978 \ubcc0\uc218\uc5d0 \ud560\ub2f9\ud558\uba74 reference \ub97c \ubcf5\uc0ac\ud558\uae30 \ub584\ubb38\uc5d0 \uac19\uc740 \uac1d\uccb4\uc5d0 \ub300\ud55c \uc811\uadfc\uc774 \uc5ec\ub7ec \ubcc0\uc218\ub97c \ud1b5\ud574\uc11c \uac00\ub2a5\ud569\ub2c8\ub2e4.\nclass \ub294 \uac1d\uccb4\uc758 identitiy \uac00 \uc911\uc694\ud558\uac70\ub098 inheritance, indirect storage \ub4f1\uc758 \ubaa9\uc801\uc73c\ub85c \uc4f0\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Struct vs. Class Array of Struct",src:t(489).Z,width:"2962",height:"1090"})),(0,r.kt)("p",null,"\ucd9c\ucc98: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2015/409/"},"WWDC 2015 Optimizing Swift Performance")),(0,r.kt)("p",null,"\ud504\ub85c\ud1a0\ucf5c\uc744 \uad6c\ud604\ud55c struct \ub294 \uc77c\ubc18\uc801\uc778 struct \uc640\ub294 \uc870\uae08 \ub2e4\ub978 \ud615\ud0dc\ub97c \uac00\uc9d1\ub2c8\ub2e4.\n\uc704 \ucf54\ub4dc\uc5d0\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"drawables")," \ubcc0\uc218\ub294 \ud504\ub85c\ud1a0\ucf5c \ubc30\uc5f4\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc Point \uc640 Line \uac1d\uccb4\ub294 \ub2e4\ub978 \ud06c\uae30\ub97c \uac00\uc9d1\ub2c8\ub2e4.\n\uac19\uc740 \ud504\ub85c\ud1a0\ucf5c\uc744 \uad6c\ud604\ud588\uc9c0\ub9cc \ub2e4\ub978 \ud06c\uae30\ub97c \uac00\uc9c0\ub294 \uacbd\uc6b0\ub97c \uc0dd\uac01\ud574\uc11c Swift \uc5d0\uc11c\ub294 Existential Container \uc774\uc6a9\ud569\ub2c8\ub2e4.\n",(0,r.kt)("img",{alt:"Struct: Protocol Implementation",src:t(8100).Z,width:"1448",height:"458"})),(0,r.kt)("p",null,"\ucd9c\ucc98: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2015/409/"},"WWDC 2015 Optimizing Swift Performance")),(0,r.kt)("p",null,"\uc704 \uadf8\ub9bc\uc5d0\uc11c \ud770\uc0c9 \uc0ac\uac01\ud615\uacfc \uac19\uc774 Existential Container \ub294 3 words \ud06c\uae30\uc758 \ub370\uc774\ud130\ub97c \uac00\uc9c8 \uc218 \uc788\ub294\ub370 \uadf8\ubcf4\ub2e4 \ud06c\uba74 Heap \uc5d0 \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\uace0 Reference \ub97c \uac00\uc9d1\ub2c8\ub2e4.\n\uadf8\ub9bc\uc5d0\uc11c \uc67c\ucabd \uad6c\uc870\uac00 \ud06c\uae30\uac00 \uc791\uc740 struct, \uc624\ub978\ucabd \uad6c\uc870\uac00 \ud06c\uae30\uac00 \ud070 struct \uc785\ub2c8\ub2e4.\n\uc0ac\uc6a9\ud558\ub294 \ub370\uc5d0 \uc788\uc5b4\uc11c \uc77c\ubc18 struct \uc640 \ub2e4\ub978 \uc810\uc740 \uc5c6\uc9c0\ub9cc Heap \uc5d0 \ud560\ub2f9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc77c\ubc18 struct \uc5d0 \ube44\ud574 \uc131\ub2a5\uc774 \uc548\uc88b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nExistential Container \ub294 Value Witness Table \uc744 \uc774\uc6a9\ud558\uc5ec \uac12\uc744 \uc0dd\uc131, \ubcf5\uc0ac\ud558\uace0\n\ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/videos/play/wwdc2016/416/"},"WWDC 2016 Understanding Swift Performance")," \ub97c \ucc38\uace0\ud558\uc138\uc694."),(0,r.kt)("h2",{id:"parameters-in-function"},"Parameters in Function"),(0,r.kt)("p",null,"\ud568\uc218\uac00 \ubd88\ub838\uc744 \ub54c, \ud568\uc218 \ub0b4 \uc9c0\uc5ed \ubcc0\uc218\uc640 \ub9e4\uac1c \ubcc0\uc218\ub294 stack \uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n\ubcf5\uc0ac\ub418\ub294 \uac12\uc774\uae30 \ub54c\ubb38\uc5d0 \ud568\uc218 \ub0b4 \ubcc0\uacbd\uc740 \ud568\uc218 \ubc16 \ubcc0\uc218\uc5d0 \uc601\ud5a5\uc744 \ub07c\uce58\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n(\ud604\uc7ac Swift 5 \uc5d0\uc11c\ub294 Value Type \uc758 \ub9e4\uac1c \ubcc0\uc218\ub97c \uc218\uc815\ud558\ub824\uace0 \ud558\uba74 \ucef4\ud30c\uc77c \uc5d0\ub7ec\uac00 \ub0a9\ub2c8\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"p"},"Left side of mutating operator isn't mutable"),")"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'func plus(score: inout Int) {\n    score += 1\n}\nvar score: Int = 0\nprint("before updating - score: \\(score)") // "before updating - score: 0"\nplus(score: &score)\nprint("after updating - score: \\(score)") // "after updating - score: 1"\n')),(0,r.kt)("p",null,"Stack \uc5d0 \ud568\uc218\uc758 Reference \ub97c \ubcf5\uc0ac\ud558\uae30 \ub54c\ubb38\uc5d0 \uc2e4\uc81c\ub85c \ubc14\uae65 \uc601\uc5ed\uacfc \ud568\uc218 \ub0b4 \uc601\uc5ed\uc758 \ubcc0\uc218\uac00 \uac19\uc740 \uac1d\uccb4\ub97c \uac00\ub9ac\ud0a4\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\uadf8\ub798\uc11c \ud568\uc218 \ub0b4\ubd80\uc5d0\uc11c \uac12\uc744 \ubcc0\uacbd\ud574\uba74 \ubc14\uae65\uae4c\uc9c0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'class ScoreBoard {\n    var score: Int = 0\n}\nfunc updateScore(board: ScoreBoard) {\n    board.score += 1\n}\nlet board = ScoreBoard()\nprint("before updating - score: \\(board.score)") // "before updating - score: 0"\nupdateScore(board: board)\nprint("after updating - score: \\(board.score)") // "after updating score: 1"\n')),(0,r.kt)("h2",{id:"capturing-values-in-closure"},"Capturing Values in Closure"),(0,r.kt)("p",null,"Closure \ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ubcc0\uc218\uc758 Strong Reference \ub97c \uac00\uc9d1\ub2c8\ub2e4.\n\uc5b4\ub5a4 \uc0c1\ud669\uc5d0\uc11c Weak Reference \ub97c \uc0ac\uc6a9\ud558\uc5ec Memory leak \uc744 \ubc29\uc9c0\ud558\ub294 \uc9c0 \uc815\ub9ac\ud574\ubd24\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",{id:"escaping-vs-non-escaping"},"Escaping vs. Non-escaping"),(0,r.kt)("p",null,"Closure \ub294 Escaping \uacfc Non-escaping \ub450 \ud0c0\uc785\uc73c\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud568\uc218\uc5d0\uc11c Closure \ub97c \ub9e4\uac1c \ubcc0\uc218\ub85c \uc804\ub2ec \ubc1b\uc558\uc744 \ub54c \ud568\uc218 \ub0b4\uc5d0\uc11c\ub9cc \uc4f0\uc774\uba74 Non-escaping (\ud0c8\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4.) \uc73c\ub85c \uc815\uc758\ud569\ub2c8\ub2e4.\n\ud568\uc218 \uc678\uc5d0\uc11c \uc4f0\uc774\uba74 Escaping(\ud0c8\ucd9c\ud55c\ub2e4.)\ub85c \uc815\uc758\ud569\ub2c8\ub2e4.\n\uc608\ub97c \ub4e4\uc5b4 \ub9e4\uac1c \ubcc0\uc218\ub85c \ub118\uc5b4\uc628 Closure \ub97c \ubcc0\uc218\ub85c \uc800\uc7a5\ud574\uc11c \ucd94\ud6c4\uc5d0 \uacc4\uc18d \uc4f0\ub294 \uacbd\uc6b0, ",(0,r.kt)("inlineCode",{parentName:"p"},"DispatchQueue.async")," \ub97c \uc774\uc6a9\ud574\uc11c \ube44\ub3d9\uae30 \ucc98\ub9ac\ub97c \ud558\ub294 \uacbd\uc6b0 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n\ud568\uc218\uc758 \ub9e4\uac1c \ubcc0\uc218\ub85c \uc804\ub2ec\ub41c Closure \ub294 \uae30\ubcf8\uc73c\ub85c Non-escaping \uc73c\ub85c \uc120\uc5b8\ub429\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \ub9e4\uac1c \ubcc0\uc218 Closure \uac00 Optional \uc774\uac70\ub098 Tuple \ub4f1\uc73c\ub85c \uac10\uc2f8\uc5ec\uc9c4 \uacbd\uc6b0\ub3c4 Escaping \uc5d0 \uc18d\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ud568\uc218 \ub0b4\uc5d0\uc11c\ub9cc \uc4f0\uc774\ub294 Non-escaping Closure \uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uba54\ubaa8\ub9ac\ub97c \ucc38\uc870\ud558\ub358 \ud568\uc218\uac00 \ub05d\ub098\uba74 \ub3d9\uc2dc\uc5d0 \uba54\ubaa8\ub9ac \ud574\uc81c\ud558\uae30 \ub54c\ubb38\uc5d0 Memory leak \uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc Escaping Closure \uc5d0\uc11c \ubcc0\uc218\ub97c \uac00\ub9ac\ud0a4\uac8c \ub418\uba74 Closure \uc758 \uc0dd\uba85 \uc8fc\uae30\uc5d0 \ub530\ub77c\uac00\uae30 \ub54c\ubb38\uc5d0 \uc608\uc0c1\uce58 \ubabb\ud558\uac8c \ub3d9\uc791\ud558\ub294 \uacbd\uc6b0\uac00 \uc0dd\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uadf8\ub798\uc11c Escaping Closure \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 Weak Reference \ub97c \uc0ac\uc6a9\ud558\uc5ec Memory leak \uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// Non-escaping Closure\nprotocol KotlinCompatible {}\nextension KotlinCompatible {\n    // @non-esacping\n    func apply(_ block: (Self) -> Void) -> Self {\n        block(self)\n        return self\n    }\n}\n\n// Escaping Closure\nfinal class Coordinator: NSObject {\n    let onPickDocuments: (([URL]) -> Void)\n    let onCancelPick: () -> Void\n\n    // property \ub85c \uc800\uc7a5\ub418\ub294 \uac83\uc740 \ud568\uc218 \ubc16\uc73c\ub85c \ube60\uc838\ub098\uc62c \uc218 \uc788\uc73c\ub2c8 @escaping\n    init(onPickDocuments: @escaping (([URL]) -> Void), onCancelPick: @escaping () -> Void) {\n        self.onPickDocuments = { url in print(url) }\n        self.onCancelPick = onCancelPick\n    }\n}\n")),(0,r.kt)("h3",{id:"capture-list"},"Capture list"),(0,r.kt)("p",null,"Closure \ub0b4\uc758 \ubcc0\uc218\ub4e4\uc744 \ubcf4\ud1b5 Strong Reference \ub85c \uac00\ub9ac\ud0a4\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 Memory leak, Delayed Deallocation \ub4f1 \uc608\uc0c1\uce58 \ubabb\ud55c \uc0c1\ud669\uc744 \uacaa\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nSwift \uc5d0\uc11c\ub294 Capture List \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc774 \uae30\ub2a5\uc744 \uc774\uc6a9\ud574\uc11c \uc774\ub7ec\ud55c \uc0c1\ud669\uc744\ub4e4 \uc608\ubc29\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nCapture List \ub294 \ubcc0\uc218\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")," \ub85c \uac10\uc2f8 \uc120\uc5b8\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// \ucd9c\ucc98: https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID544\n// Value Type\nvar a = 0\nvar b = 0\nlet closure = { [a] in\n    // Capture List \ub85c \uc120\uc5b8\ud558\uba74\uc11c a \ub294 \ubcf5\uc0ac\ub418\uc5b4\n    // scope \ubc16 \ubcc0\uc218 a \uc5d0 \uc601\ud5a5\uc744 \ub07c\uce58\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n    print(a, b)\n}\n\na = 10\nb = 10\nclosure() // "0 10"\n')),(0,r.kt)("p",null,"Reference Type \uc740 Reference \ub97c Capture \ud558\uae30 \ub54c\ubb38\uc5d0 Closure \uc548, \ubc16\uc758 \ub370\uc774\ud130 \ubcc0\uacbd\uc774 \uc11c\ub85c\uc5d0\uac8c \uc601\ud5a5\uc744 \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// \ucd9c\ucc98: https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID544\nclass SimpleClass {\n    var value: Int = 0\n}\nvar x = SimpleClass()\nvar y = SimpleClass()\nlet closure = { [x] in\n    // Capturing reference\n    print(x.value, y.value)\n}\n\nx.value = 10\ny.value = 10\nclosure() // "10 10"\n')),(0,r.kt)("p",null,"Capture list \uc5d0 weak, unowned \uc744 \uac19\uc774 \uc120\uc5b8\ud558\uc5ec Reference Counting \uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// \ucd9c\ucc98: https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID544\nmyFunction { [self] in print(self.title) }              // explicit strong capture\nmyFunction { [weak self] in print(self!.title) }        // weak capture\nmyFunction { [unowned self] in print(self.title) }      // unowned capture\nmyFunction { [weak parent = self.parent] in print(parent!.title) }    // Weak capture of "self.parent" as "parent"\n')),(0,r.kt)("h3",{id:"usages-of-weak-self-in-closure"},"Usages of ","[weak self]"," in Closure"),(0,r.kt)("p",null,"Weak Reference \ub97c \ud1b5\ud574 Memory leak, Delayed Deallocation \ub4f1\uc744 \uc608\ubc29\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uccab \uc608\uc81c\ub294 \uc560\ub2c8\uba54\uc774\uc158 \uad00\ub828\ub41c \uc608\uc81c\uc785\ub2c8\ub2e4.\n\uc560\ub2c8\uba54\uc774\uc158\uc774 \ub05d\ub098\ub294 \uc2dc\uc810\uc5d0 \ub3d9\uc791\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"addCompletion")," \uc744 \ud1b5\ud574 \uc815\uc758\ud569\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"addCompletion")," \uc5d0\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"ContentView")," \ub97c \uc811\uadfc\ud558\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"ContentView")," \uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"addCompletion")," \uc744 \uc815\uc758\ud55c Animator \ub97c \uac00\ub9ac\ud0a4\uba74\uc11c Reference Cycle \uc774 \uc0dd\uae41\ub2c8\ub2e4.\n(ContentView \u2192 Animator \u2192 Completion Closure \u2192 ContentView)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// \ucd9c\ucc98: https://medium.com/flawless-app-stories/you-dont-always-need-weak-self-a778bec505ef\nclass ContentView: UIView {\n    // ContentView -> Animation Module -> Closure -> ContentView\n    func setupAnimation() {\n        let anim = UIViewPropertyAnimator(duration: 2.0, curve: .linear) {\n            // Do something with self.view\n        }\n        anim.addCompletion { _ in\n            // Do something with self.view\n        }\n        self.animationStorage = anim\n    }\n}\n")),(0,r.kt)("p",null,"\ub450 \ubc88\uc9f8\ub294 GCD \uc640 \uad00\ub828\ub41c \uc608\uc81c\uc785\ub2c8\ub2e4. GCD \ub294 \uba40\ud2f0\uc2a4\ub808\ub4dc \uc0ac\uc6a9\uc744 \uc704\ud55c API \uc785\ub2c8\ub2e4.\n\uc608\uc81c\uc5d0\uc11c\ub294 DispatchQueue \ub97c \uc774\uc6a9\ud558\uc5ec \ub2e4\ub978 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \ucc98\ub9ac\ud560 \ub54c Closure \ub0b4\uc5d0\uc11c self \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4.\n\uadfc\ub370 \uc5ec\uae30\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"[weak self]")," \ub97c \uc37c\uc73c\ub2c8 Reference Cycle \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc Closure \ub0b4\uc758 \ub3d9\uc791\uc774 \ub9ce\uc740 \uc2dc\uac04\uc774 \uac78\ub9ac\ub294 \uacbd\uc6b0 \uac1d\uccb4\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uc5c6\uc560\ub3c4 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc544 \uba54\ubaa8\ub9ac \ud574\uc81c\uac00 \ub418\uc9c0 \uc54a\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7f4 \ub550 guard let \uad6c\ubb38\uc744 \uc5c6\uc560\uc11c Optional Self \ub97c \uc774\uc6a9\ud558\uc5ec \uac1d\uccb4\uac00 \uc0ac\ub77c\uc84c\uc744 \ub54c \uadf8 \ub2e4\uc74c \uc791\uc5c5\uc744 \ucc98\ub9ac \uc548\ud558\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// \ucd9c\ucc98: https://medium.com/flawless-app-stories/you-dont-always-need-weak-self-a778bec505ef\nfunc process(image: UIImage, completion: @escaping (UIImage?) -> Void) {\n    DispatchQueue.global(qos: .userInteractive).async { [weak self] in\n        guard let self = self else { return }\n        let firstProcessed = self.doHeavyWork1(image: image)\n        let secondProcessed = self.doHeavyWork2(image: firstProcessed)\n        let thirdProcessed = self.doHeavyWork3(image: secondProcessed)\n        completion(processedImage)\n    }\n}\n")),(0,r.kt)("p",null,"\ub9c8\uc9c0\ub9c9\uc73c\ub85c URLSession \uc744 \uc774\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0 \ud6c4 \uc751\ub2f5 \uac12\uc744 \ucc98\ub9ac\ud558\ub294 Closure \uc5d0 \ub300\ud55c \uc608\uc81c\uc785\ub2c8\ub2e4.\n\uc608\uc81c Closure \ub294 \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0 \ud6c4 \uc751\ub2f5 \uac12\uc774 \ub3c4\ucc29\ud560 \ub54c\uae4c\uc9c0 self \ub97c \uac15\ud558\uac8c \ucc38\uc870\ud558\uba74\uc11c self \uc758 \uba54\ubaa8\ub9ac \ud574\uc81c\ub97c \ubc29\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub124\ud2b8\uc6cc\ud06c \uc694\uccad\uc744 \ud55c \ud654\uba74\uc774 \uc0ac\ub77c\uc84c\uc74c\uc5d0\ub3c4 \ub124\ud2b8\uc6cc\ud06c \uc751\ub2f5\uc744 \ucc98\ub9ac\ud558\uba74\uc11c \ud544\uc694 \uc5c6\ub294 \uc790\uc6d0\uc744 \uc18c\ubaa8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc544\ub798\uc640 \uac19\uc740 \uc0c1\ud669\ub3c4 ",(0,r.kt)("inlineCode",{parentName:"p"},"[weak self]")," Capture list \ub97c \uc774\uc6a9\ud558\uc5ec \uc774\ubbf8 \uc0ac\ub77c\uc9c4 \uac1d\uccb4\uc5d0 \ub300\ud55c \ucc98\ub9ac\ub97c \ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// \ucd9c\ucc98: https://medium.com/flawless-app-stories/you-dont-always-need-weak-self-a778bec505ef\nfunc delayedAllocAsyncCall() {\n    /* ... */\n    let session = URLSession(configuration: sessionConfig)\n    let task = session.downloadTask(with: url) { localURL, _, error in\n        guard let localURL = localURL else { return }\n        /*\n            Do something with `self`\n            ex) print(self.view)\n        */\n    }\n    task.resume()\n}\n")),(0,r.kt)("h1",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"Swift \uba54\ubaa8\ub9ac \ucc38\uc870\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd24\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \ub0b4\uc6a9\uc744 \ubc14\ud0d5\uc73c\ub85c \uc774\uc81c\ub294 \uc704\uc5d0 \uc9c8\ubb38\ub4e4\uc5d0 \ub2f5\uc744 \uc27d\uac8c \ud560 \uc218 \uc788\uc744 \uac83 \uac19\ub124\uc694."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// Question 1\nvar variable = "Value before defining closure"\nlet closure = {\n    print(variable)\n}\nvariable = "Value after defining closure"\nclosure() // "Value after defining closure"\n// Question 2\nvar variable = "Value before defining closure"\nlet closure = { [variable] in\n    // Value Type Capture\n    // \uac12\uc744 \ubcf5\uc0ac\ud558\uae30 \ub54c\ubb38\uc5d0 closure \uc120\uc5b8 \uc774\ud6c4\uc5d0 \uc218\uc815\ud574\ub3c4 \uc601\ud5a5\uc744 \ub07c\uce58\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n    print(variable)\n}\nvariable = "Value after defining closure"\nclosure() // "Value before defining closure"\n// Question 3\nclass Object {\n    var name: String\n\n    init(name: String) {\n        self.name = name\n    }\n}\nvar obj = Object(name: "Value before defining closure")\nlet closure = { [obj] in\n    // Reference Type Capture\n    // \uac19\uc740 \uac1d\uccb4\ub97c \ubc14\ub77c\ubcf4\uae30 \ub54c\ubb38\uc5d0 \uc548\uacfc \ubc16 \ub370\uc774\ud130 \ubcc0\uacbd\uc774 \uc11c\ub85c \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4.\n    print(obj.name)\n}\nobj.name = "Value after defining closure"\nclosure() // "Value after defining closure"\n// Question 4\nfunc makeIncrementer(forIncrement amount: Int) -> () -> Int {\n    var runningTotal = 0\n    func incrementer() -> Int {\n        // Closure \uc5d0\uc11c Stack \uc5d0 \uc800\uc7a5\ub41c \uac12\uc744 \ucc38\uc870\ud558\ub294 \uacbd\uc6b0\n        // Heap \uc5d0 \ubcf5\uc0ac\ub418\uc5b4 Closure \uac00 \uc2e4\ud589\ub420 \ub54c \uc811\uadfc\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4.\n        runningTotal += amount\n        return runningTotal\n    }\n    return incrementer\n}\n\nlet incrementByTen = makeIncrementer(forIncrement: 10)\nincrementByTen() // returns a value of 10\nincrementByTen() // returns a value of 20\nincrementByTen() // returns a value of 30\nlet incrementBySeven = makeIncrementer(forIncrement: 7)\nincrementBySeven() // returns a value of 7\nincrementByTen() // returns a value of 40\n')),(0,r.kt)("h1",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://academy.realm.io/kr/posts/letswift-swift-performance/"},"Swift \uc131\ub2a5 \uc774\ud574\ud558\uae30: Value \ud0c0\uc785, Protocol\uacfc \uc2a4\uc704\ud504\ud2b8\uc758 \uc131\ub2a5 \ucd5c\uc801\ud654")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://heartbeat.fritz.ai/memory-management-in-swift-heaps-stacks-baa755abe16a"},"Memory Management in Swift: Heaps & Stacks")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html"},"Automatic Reference Counting - The Swift Programming Language (Swift 5.2)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://swiftsenpai.com/swift/can-you-answer-this-simple-swift-question-correctly/"},"Can You Answer This Simple Swift Question Correctly? - Swift Senpai")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/swlh/differences-between-classes-and-structures-in-swift-ab2e27956665"},"Differences Between Classes and Structures in Swift")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/rocknnull/ios-gcd-what-the-weak-is-going-on-d5a10fc682a"},"iOS - GCD what the ","_","_","weak is going on?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/flawless-app-stories/you-dont-always-need-weak-self-a778bec505ef"},"You don't (always) need [weak self]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID544"},"Expressions - The Swift Programming Language (Swift 5.2)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/@cyrilcermak/swift-is-passing-by-value-faster-than-passing-by-reference-d30b6522d065"},"Swift: Is passing by value faster than passing by reference?"))))}f.isMDXComponent=!0},2747:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/how_reference_counting_works-835b927c6f132036a7ae7f8cb1c4e290.png"},8100:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/protocol_implementation_struct-8ca04dc37f52d9a0c30262879a984c0e.png"},489:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/struct_vs_class_class_array-a5e846c7eda974d42a67508b10119ec8.png"},5192:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/struct_vs_class_struct_array-f1f536278f4b70309a6b3f449b1764f1.png"}}]);